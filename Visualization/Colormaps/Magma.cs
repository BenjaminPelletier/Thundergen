using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Thundergen.Visualization.Colormaps
{
    class Magma
    {
        // http://inversed.ru/Blog_2.htm

        public static byte[] Colors =
        {
4, 0, 0,
5, 0, 1,
6, 1, 1,
8, 1, 1,
10, 1, 2,
12, 2, 2,
14, 2, 2,
16, 3, 3,
18, 3, 4,
20, 4, 4,
22, 4, 5,
24, 5, 6,
26, 5, 6,
28, 6, 7,
30, 7, 8,
32, 7, 9,
34, 8, 10,
36, 9, 11,
38, 9, 12,
41, 10, 13,
43, 11, 14,
45, 11, 16,
47, 12, 17,
50, 13, 18,
52, 13, 19,
54, 14, 20,
57, 14, 21,
59, 15, 23,
61, 15, 24,
64, 16, 25,
66, 16, 26,
68, 16, 28,
71, 17, 29,
73, 17, 30,
76, 17, 32,
78, 17, 33,
81, 18, 35,
83, 18, 36,
86, 18, 38,
88, 18, 39,
90, 17, 41,
93, 17, 42,
95, 17, 44,
97, 17, 46,
99, 17, 47,
101, 17, 49,
103, 16, 51,
105, 16, 52,
107, 16, 54,
109, 16, 56,
111, 15, 58,
112, 15, 59,
113, 15, 61,
115, 15, 63,
116, 15, 65,
117, 15, 66,
118, 15, 68,
119, 16, 70,
120, 16, 71,
121, 16, 73,
122, 17, 75,
122, 17, 76,
123, 17, 78,
124, 18, 79,
124, 18, 81,
125, 19, 83,
125, 19, 84,
126, 20, 86,
126, 21, 87,
126, 21, 89,
127, 22, 91,
127, 22, 92,
127, 23, 94,
128, 24, 95,
128, 24, 97,
128, 25, 98,
128, 26, 100,
129, 26, 101,
129, 27, 103,
129, 28, 105,
129, 28, 106,
129, 29, 108,
129, 30, 109,
130, 30, 111,
130, 31, 112,
130, 31, 114,
130, 32, 116,
130, 33, 117,
130, 33, 119,
130, 34, 120,
130, 34, 122,
130, 35, 123,
130, 36, 125,
130, 36, 127,
130, 37, 128,
130, 37, 130,
130, 38, 131,
130, 38, 133,
130, 39, 134,
130, 40, 136,
130, 40, 138,
130, 41, 139,
129, 41, 141,
129, 42, 142,
129, 42, 144,
129, 43, 146,
129, 43, 147,
129, 44, 149,
129, 44, 151,
128, 45, 152,
128, 46, 154,
128, 46, 155,
128, 47, 157,
127, 47, 159,
127, 48, 160,
127, 48, 162,
127, 49, 164,
126, 49, 165,
126, 50, 167,
126, 50, 169,
125, 51, 170,
125, 51, 172,
124, 52, 174,
124, 52, 175,
124, 53, 177,
123, 53, 178,
123, 54, 180,
122, 54, 182,
122, 55, 183,
121, 56, 185,
121, 56, 187,
120, 57, 188,
120, 57, 190,
119, 58, 192,
118, 59, 193,
118, 59, 195,
117, 60, 196,
117, 60, 198,
116, 61, 200,
115, 62, 201,
115, 63, 203,
114, 63, 204,
113, 64, 206,
112, 65, 208,
112, 66, 209,
111, 66, 211,
110, 67, 212,
109, 68, 214,
109, 69, 215,
108, 70, 217,
107, 71, 218,
106, 72, 220,
106, 73, 221,
105, 74, 222,
104, 75, 224,
103, 76, 225,
102, 77, 226,
102, 78, 228,
101, 79, 229,
100, 81, 230,
99, 82, 231,
99, 83, 233,
98, 84, 234,
97, 86, 235,
97, 87, 236,
96, 89, 237,
95, 90, 238,
95, 92, 239,
94, 93, 240,
94, 95, 241,
93, 97, 242,
93, 98, 242,
93, 100, 243,
93, 102, 244,
92, 104, 245,
92, 105, 245,
92, 107, 246,
92, 109, 247,
92, 111, 247,
92, 113, 248,
92, 114, 248,
92, 116, 249,
93, 118, 249,
93, 120, 250,
93, 122, 250,
94, 124, 250,
94, 126, 251,
95, 128, 251,
95, 129, 251,
96, 131, 252,
96, 133, 252,
97, 135, 252,
98, 137, 253,
99, 139, 253,
99, 141, 253,
100, 143, 253,
101, 145, 253,
102, 147, 254,
103, 149, 254,
104, 150, 254,
105, 152, 254,
106, 154, 254,
107, 156, 254,
108, 158, 255,
109, 160, 255,
111, 162, 255,
112, 164, 255,
113, 165, 255,
114, 167, 255,
115, 169, 255,
117, 171, 255,
118, 173, 255,
119, 175, 255,
121, 177, 255,
122, 179, 255,
124, 180, 255,
125, 182, 255,
126, 184, 255,
128, 186, 255,
129, 188, 255,
131, 190, 255,
132, 191, 255,
134, 193, 255,
135, 195, 255,
137, 197, 255,
139, 199, 255,
140, 201, 255,
142, 203, 255,
143, 204, 255,
145, 206, 255,
147, 208, 255,
148, 210, 255,
150, 212, 255,
152, 214, 255,
153, 215, 255,
155, 217, 255,
157, 219, 254,
159, 221, 254,
160, 223, 254,
162, 225, 254,
164, 226, 254,
166, 228, 254,
167, 230, 254,
169, 232, 254,
171, 234, 254,
173, 236, 254,
175, 237, 253,
177, 239, 253,
179, 241, 253,
180, 243, 253,
182, 245, 253,
184, 246, 253,
186, 248, 253,
188, 250, 253,
190, 252, 253,
192, 254, 253,
        };

        public static void CopyColor(float v, byte[] target, int offset)
        {
            if (float.IsNaN(v))
            {
                target[offset] = 0;
                target[offset + 1] = 0;
                target[offset + 2] = 0;
                target[offset + 3] = 0;
                return;
            }
            int i = 3 * (int)Math.Round(Math.Min(Math.Max(v, 0f), 1f) * 255f);
            Array.Copy(Colors, i, target, offset, 3);
        }
    }
}
